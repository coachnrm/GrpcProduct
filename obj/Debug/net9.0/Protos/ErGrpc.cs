// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/er.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcErService {
  public static partial class Er
  {
    static readonly string __ServiceName = "er.Er";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcErService.GetErPatientsRequest> __Marshaller_er_GetErPatientsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcErService.GetErPatientsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcErService.GetErPatientsResponse> __Marshaller_er_GetErPatientsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcErService.GetErPatientsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcErService.ErPatientUpdate> __Marshaller_er_ErPatientUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcErService.ErPatientUpdate.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.GetErPatientsResponse> __Method_GetErPatients = new grpc::Method<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.GetErPatientsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetErPatients",
        __Marshaller_er_GetErPatientsRequest,
        __Marshaller_er_GetErPatientsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.ErPatientUpdate> __Method_GetErPatientsStream = new grpc::Method<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.ErPatientUpdate>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetErPatientsStream",
        __Marshaller_er_GetErPatientsRequest,
        __Marshaller_er_ErPatientUpdate);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcErService.ErReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Er</summary>
    [grpc::BindServiceMethod(typeof(Er), "BindService")]
    public abstract partial class ErBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcErService.GetErPatientsResponse> GetErPatients(global::GrpcErService.GetErPatientsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetErPatientsStream(global::GrpcErService.GetErPatientsRequest request, grpc::IServerStreamWriter<global::GrpcErService.ErPatientUpdate> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ErBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetErPatients, serviceImpl.GetErPatients)
          .AddMethod(__Method_GetErPatientsStream, serviceImpl.GetErPatientsStream).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ErBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetErPatients, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.GetErPatientsResponse>(serviceImpl.GetErPatients));
      serviceBinder.AddMethod(__Method_GetErPatientsStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcErService.GetErPatientsRequest, global::GrpcErService.ErPatientUpdate>(serviceImpl.GetErPatientsStream));
    }

  }
}
#endregion
